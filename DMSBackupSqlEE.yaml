AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Template for AWS Database Migration Workshop.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Amazon EC2 Configuration"
        Parameters:
          - EC2ServerInstanceType
          - KeyName
          - EC2Subnet
      -
        Label:
          default: "Target Amazon RDS Database Configuration"
        Parameters:
          - RDSInstanceType
          - SubnetGroupSubnets
          - DBSnapshotIdentifier
      -
        Label:
          default: "Network Configuration"
        Parameters:
          - VpcId
          - VpcCidr

Mappings:
  RegionMap:
    us-east-1: # Virginia
      EC2AMI: ami-0e38fa17744b2f6a5 # AMI ID current as of April 03, 2023

Parameters:

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable RDP access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Default: mlss-backup-test

  VpcId:
    Description: Enter the VPC CIDR range in the form x.x.x.x/16.
    Type: AWS::EC2::VPC::Id
    ConstraintDescription: Must be a valid Vpc ID
    Default: vpc-0ab063479f29e9a2b

  VpcCidr:
    Description: Cidr block value of VPC
    Type: String
    Default: 172.31.0.0/16

  EC2ServerInstanceType:
    Description: Amazon EC2 Instance Type
    Type: String
    Default: m5.large
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m5.large
    ConstraintDescription: Must be a valid EC2 instance type.

  EC2Subnet:
    Description: EC2 Subnet
    Type: AWS::EC2::Subnet::Id
    Default: subnet-0b02f36849a6b583c

  RDSInstanceType:
    Description: Sql Server Enterprise Copy of mssldevsql
    Type: String
    Default: db.t3.2xlarge
    AllowedValues:
      - db.t3.2xlarge
      - db.t3.medium
    ConstraintDescription: Must be a valid Amazon RDS instance type.

  SubnetGroupSubnets:
    Description: RDS Subnets for Subnet Group
    Type: List<AWS::EC2::Subnet::Id>
    Default: "subnet-031620b2a84513efb,subnet-0ef523efce91b385b"

  DBSnapshotIdentifier:
    Type: String
    Default: arn:aws:rds:us-east-1:470091195908:snapshot:rds:mlssdevsql-2023-04-03-07-25

Resources:


  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets available for the DMS Lab
      SubnetIds: !Ref SubnetGroupSubnets

  AllInstanceIdsAssociation:
    Type: AWS::SSM::Association
    Properties:
      AssociationName: UpdateSSMAgent
      Name: AWS-UpdateSSMAgent
      ScheduleExpression: cron(0 2 ? * SUN *)
      Targets:
      - Key: InstanceIds
        Values:
        - !Ref EC2Instance
      WaitForSuccessTimeoutSeconds: 300
  
  Ec2SsmIamRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      RoleName: !Sub '${AWS::StackName}-EC2smIAMRole'


  Ec2SsmInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Path: /
      Roles: [!Ref Ec2SsmIamRole]

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref EC2ServerInstanceType
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref Ec2SsmInstanceProfile
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-EC2Instance'

      BlockDeviceMappings:
      - DeviceName: "/dev/sda1"
        Ebs:
          DeleteOnTermination: true
          Iops: 2000
          VolumeSize: 250
          VolumeType: io1
      ImageId: !FindInMap [ RegionMap, !Ref 'AWS::Region', EC2AMI ]

      NetworkInterfaces:
      - AssociatePublicIpAddress: true
        DeleteOnTermination: true
        DeviceIndex: '0'
        SubnetId: !Ref EC2Subnet
        GroupSet:
          - !Ref InstanceSecurityGroup
  
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-InstanceSecurityGroup'
      GroupDescription: Enable RDP access via port 3389
      VpcId: !Ref VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 3389
        ToPort: 3389
        CidrIp: 127.0.0.1/32
        Description: Allows RDP access to EC2 Instance
      - IpProtocol: tcp
        FromPort: 1433
        ToPort: 1433
        CidrIp: !Ref VpcCidr
        Description: Allows SQL Server Access

  ReplicationInstanceSubnetGroup:
    Type: AWS::DMS::ReplicationSubnetGroup
    Properties:
      ReplicationSubnetGroupDescription: !Sub '${AWS::StackName} DMS Subnet Group'
      ReplicationSubnetGroupIdentifier: !Sub '${AWS::StackName}-dms-subnet-group'
      SubnetIds: !Ref SubnetGroupSubnets
      Tags:
          - Key: Name
            Value: !Sub '${AWS::StackName}-dms-subnet-group'

  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-RDSSecurityGroup'
      VpcId: !Ref VpcId
      GroupDescription: Sql Server Security Group.
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 1433
        ToPort: 1433
        CidrIp: !Ref VpcCidr
        Description: Allows Microsoft SQL Server Access
  
  SourceSQLServer:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      Tags:
      - Key: Client
        Value: MLSS
      AllocatedStorage: '80'
      AutoMinorVersionUpgrade: false
      AvailabilityZone: !Sub '${AWS::Region}c'
      CopyTagsToSnapshot: true
      DBInstanceClass: !Ref RDSInstanceType
      DBSnapshotIdentifier: !Ref DBSnapshotIdentifier
      DBSubnetGroupName: !Ref DBSubnetGroup
      Engine: sqlserver-ee
      EngineVersion: 15.00.4198.2.v1
      LicenseModel: license-included
      MultiAZ: false
      PubliclyAccessible: false
      StorageEncrypted: false
      StorageType: gp2
      VPCSecurityGroups:
        - !GetAtt RDSSecurityGroup.GroupId

  TargetSqlServer:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: 


Outputs:

  SourceEC2PublicDNS:
    Description: Public DNS enpoint for the EC2 instance
    Value: !GetAtt EC2Instance.PublicDnsName

  SourceEC2PrivateDNS:
    Description: Private DNS endpoint for the EC2 instance
    Value: !GetAtt EC2Instance.PrivateDnsName

  TargetSQLServerEndpoint:
    Description: Source MS SQL Server RDS Endpoint
    Value: !GetAtt SourceSQLServer.Endpoint.Address
